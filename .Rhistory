dltriagle
install.packages("triangle")
library(triangle)
pltriangle(1, 1, 25)
pltriangle(2, 1, 25)
pltriangle(25, 1, 25)
rltriagle(20, 1, 20, 25)
rltriangle(20, 1, 20, 25)
rltriangle(20, 1, 20)
example("triangle")
rltriangle(20, 1, 25, 20)
hist(rltriangle(20, 1, 25, 20))
hist(rltriangle(25, 1, 25, 20))
tri <- rtriangle(100000, 1, 25, 20)
hist(tri, breaks=100, main="Triangle Distribution", xlab="x")
tri <- rtriangle(1, 1, 25, 20)
tri
int(tri)
as.integer(rtriangle(1, 1, 25, 20))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
as.integer(rtriangle(1, 1, 25))
tri <- rtriangle(100000, 1, 25)
hist(tri, breaks=100, main="Triangle Distribution", xlab="x")
tri <- rtriangle(100000, 1, 25, 25)
hist(tri, breaks=100, main="Triangle Distribution", xlab="x")
help(rbeta)
library(SimSemi)
rcpp_hello()
install.packages("DiagrammeR")
install.packages("RcppEigen")
install.packages("RcppDL")
install.packages("RcppMLPACK")
install.packages("inline")
library(SimSemi)
Sys.getenv("HOME")
library(SimSemi)
install.packages("roxygen2")
source('~/.active-rstudio-document')
mermaid("
gantt
dateFormat  YYYY-MM-DD
title A Very Nice Gantt Diagram
section Basic Tasks
This is completed             :done,          first_1,    2014-01-06, 2014-01-08
This is active                :active,        first_2,    2014-01-09, 3d
Do this later                 :               first_3,    after first_2, 5d
Do this after that            :               first_4,    after first_3, 5d
section Important Things
Completed, critical task      :crit, done,    import_1,   2014-01-06,24h
Also done, also critical      :crit, done,    import_2,   after import_1, 2d
Doing this important task now :crit, active,  import_3,   after import_2, 3d
Next critical task            :crit,          import_4,   after import_3, 5d
section The Extras
First extras                  :active,        extras_1,   after import_4,  3d
Second helping                :               extras_2,   after extras_1, 20h
More of the extras            :               extras_3,   after extras_1, 48h
")
library(SimSemi)
install.packages("rcpp")
library(SimSemi)
fivenum(c(1:10))
fivenum
library(SimSemi)
hello()
rnorm(100, 80, 10)
install.packages("BH")
install.packages("rbenchmark")
install.packages("numbers")
install.packages(c("dplyr", "R6", "rmarkdown", "XML"))
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
library(SimSemi)
runif(5)
runif(5,5,120)
library("triangle", lib.loc="C:/Program Files/R/R-3.4.0/library")
30**10
(3*2)**3
4**3
2*3**3+1*3**2
2*3**3+2*3**2+2*3**1+2*3**0
4**4
3**4
10^(15*3)
100^(15*3)
log(3,3^(20*3))
3^(20*3)
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
library(SimSemi)
TestMain()
Rcpp::sourceCpp('src/GeneticAlgorithm.cpp')
library(SimSemi)
TestMain()
library(SimSemi)
TestMain()
library(SimSemi)
TestMain()
library(SimSemi)
TestMain()
library("SimSemi", lib.loc="C:/Program Files/R/R-3.4.0/library")
x<-TestMain(100, 15)
plot(x[[2]])
x<-TestMain(100, 15)
library(SimSemi)
x<-TestMain(5,10)
plot(x[[2]])
x<-TestMain(5,10)
plot(x[[2]])
x<-TestMain(5,10)
plot(x[[2]])
library(SimSemi)
x<-TestMain(5,10)
plot(x[[2]])
x<-TestMain(5,10)
plot(x[[2]])
x<-TestMain(450,10)
plot(x[[2]])
?timevis
library(timevis)
?timevis
if (interactive()) {
library(shiny)
data <- data.frame(
id = 1:3,
start = c("2015-04-04", "2015-04-05 11:00:00", "2015-04-06 15:00:00"),
end = c("2015-04-08", NA, NA),
content = c("<h2>Vacation!!!</h2>", "Acupuncture", "Massage"),
style = c("color: red;", NA, NA)
)
ui <- fluidPage(
timevisOutput("appts"),
div("Selected items:", textOutput("selected", inline = TRUE)),
div("Visible window:", textOutput("window", inline = TRUE)),
tableOutput("table")
)
server <- function(input, output) {
output$appts <- renderTimevis(
timevis(
data,
options = list(editable = TRUE, multiselect = TRUE, align = "center")
)
output$selected <- renderText(
paste(input$appts_selected, collapse = " ")
)
output$window <- renderText(
paste(input$appts_window[1], "to", input$appts_window[2])
)
output$table <- renderTable(
input$appts_data
)
}
shinyApp(ui, server)
}
library(SimSemi)
x<-TestMain(10,10,1,1000)
library(SimSemi)
x<-TestMain(10,10,1,1000)
plot(x[[2]])
drawGantChart("d:/temp/GanData0.txt", 10)
drawGantChart<-function(filename, machine)
{
d1<-read.table(filename, header=TRUE, sep="|")
grs<-data.frame(id = 0:(machine-1), content = c(0:(machine-1)))
timevis(d1, grs)
}
drawGantChart("d:/temp/GanData0.txt", 10)
x<-TestMain(10,10,1,10000)
drawGantChart("d:/temp/GanData1.txt", 10)
plot(x[[2]])
x<-TestMain(50,10,1,10000)
plot(x[[2]])
drawGantChart("d:/temp/GanData2.txt", 50)
x<-TestMain(50,20,1,10000)
plot(x[[2]])
drawGantChart("d:/temp/GanData3.txt", 20)
drawGantChart("d:/temp/GanData3.txt", 50)
drawGantChart("d:/temp/GanData3.txt", 10)
x<-TestMain(50,10,1,10000)
drawGantChart("d:/temp/GanData4.txt", 10)
x<-TestMain(50,10,1,1000000)
library("SimSemi", lib.loc="C:/Program Files/R/R-3.4.0/library")
remove.packages("SimSemi")
